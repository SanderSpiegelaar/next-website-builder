// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider      = "mysql"
  url           = env("LOCAL_DATABASE_URL")
  relationMode  = "prisma"
}

enum Role {
  AGENCY_OWNER
  AGENCY_ADMIN
  SUBACCOUNT_USER
  SUBACCOUNT_GUEST
}

enum Icon {
  settings
  chart
  calendar
  check
  chip
  compass
  database
  flag
  home
  info
  link
  lock
  messages
  notification
  payment
  power
  receipt
  shield
  star
  tune
  videorecorder
  wallet
  warning
  headphone
  send
  pipelines
  person
  category
  contact
  clipboardIcon
}

enum TriggerTypes {
  CONTACT_FORM
}

enum ActionType {
  CREATE_CONTACT
}

enum InvitationStatus {
  ACCEPTED
  REVOKED
  PENDING
}

enum Plan {
  price_1OYxkqFj9oKEERu1NbKUxXxN
  price_1OYxkqFj9oKEERu1KfJGWxgN
}

model User {
  id                      String            @id @default(uuid())
  name                    String
  avatarUrl               String            @db.Text
  email                   String            @unique
  createdAt               DateTime          @default(now())
  updatedAt               DateTime          @updatedAt
  role                    Role              @default(SUBACCOUNT_USER)

  agencyId                String?
  agency                  Agency?           @relation(fields: [agencyId], references: [id], onDelete: Cascade)
  permissions             Permissions[]
  tickets                 Ticket[]
  notification            Notification[]

  @@index([agencyId])
}

model Permissions {
  id                      String             @id @default(uuid())
  email                   String
  user                    User               @relation(fields: [email], references: [email], onDelete: Cascade)
  subAccountId            String
  SubAccount              SubAccount         @relation(fields: [subAccountId], references: [id], onDelete: Cascade)
  access                  Boolean

  @@index([subAccountId])
  @@index([email])
}


model Agency {
  id                      String            @id @default(uuid())
  connectAccountId        String?           @default("")
  customerId              String            @default("")
  name                    String
  agencyLogo              String            @db.Text
  companyEmail            String            @db.Text
  companyPhone            String
  whiteLabel              Boolean           @default(true)
  address                 String
  city                    String
  zipCode                 String
  state                   String
  country                 String
  goal                    Int               @default(5)
  createdAt               DateTime          @default(now())
  updatedAt               DateTime          @updatedAt

  users                   User[]
  subAccount              SubAccount[]
  sidebarOption           AgencySidebarOption[]
  invitation              Invitation[]
  notification            Notification[]
  subscription            Subscription?
  addons                  AddOns[]
}

model SubAccount {
  id                      String             @id @default(uuid())
  connectAccountId        String?            @default("")
  name                    String
  subAccountLogo          String             @db.Text
  createdAt               DateTime           @default(now())
  updatedAt               DateTime           @updatedAt
  companyEmail            String             @db.Text
  companyPhone            String
  goal                    Int                @default(5)
  address                 String
  city                    String
  zipCode                 String
  state                   String
  country                 String

  agencyId                String
  agency                  Agency             @relation(fields: [agencyId], references: [id], onDelete: Cascade)
  sidebarOption           SubAccountSidebarOption[]
  permissions             Permissions[]
  funnels                 Funnel[]
  media                   Media[]
  contact                 Contact[]
  trigger                 Trigger[]
  automation              Automation[]
  pipeline                Pipeline[]
  tags                    Tag[]
  notification            Notification[]

  @@index([agencyId])
}

model Tag {
  id                      String             @id @default(uuid())
  name                    String
  color                   String
  createdAt               DateTime           @default(now())
  updatedAt               DateTime           @updatedAt
  
  subAccountId            String
  subAccount              SubAccount         @relation(fields: [subAccountId], references: [id], onDelete: Cascade)
  ticket                  Ticket[]

  @@index([subAccountId])
}

model Pipeline {
  id                      String             @id @default(uuid())
  name                    String
  createdAt               DateTime           @default(now())
  updatedAt               DateTime           @updatedAt

  lane                    Lane[]
  subAccount              SubAccount         @relation(fields: [subAccountId], references: [id], onDelete: Cascade)
  subAccountId            String

  @@index([subAccountId])
}

model Lane {
  id                      String             @id @default(uuid())
  name                    String
  createdAt               DateTime           @default(now())
  updatedAt               DateTime           @updatedAt

  pipeline                Pipeline           @relation(fields: [pipelineId], references: [id], onDelete: Cascade)
  pipelineId              String
  tickets                 Ticket[]
  order                   Int                @default(0)

  @@index([pipelineId])
}

model Ticket {
  id                      String             @id @default(uuid())
  name                    String
  createdAt               DateTime           @default(now())
  updatedAt               DateTime           @updatedAt
  laneId                  String
  order                   Int                @default(0)
  Lane                    Lane               @relation(fields: [laneId], references: [id], onDelete: Cascade)
  value                   Decimal?
  description             String?
  tags                    Tag[]

  customerId              String?
  customer                Contact?           @relation(fields: [customerId], references: [id], onDelete: SetNull)

  assignedUserId String?
  assigned       User?                       @relation(fields: [assignedUserId], references: [id], onDelete: SetNull)

  @@index([laneId])
  @@index([customerId])
  @@index([assignedUserId])
}

model Trigger {
  id                      String             @id @default(uuid())
  name                    String
  type                    TriggerTypes
  createdAt               DateTime           @default(now())
  updatedAt               DateTime           @updatedAt

  subAccountId            String
  Subaccount              SubAccount         @relation(fields: [subAccountId], references: [id], onDelete: Cascade)
  automations             Automation[]

  @@index([subAccountId])
}

model Automation {
  id                      String              @id @default(uuid())
  name                    String
  createdAt               DateTime            @default(now())
  updatedAt               DateTime            @updatedAt
  triggerId               String?
  published               Boolean             @default(false)
  trigger                 Trigger?            @relation(fields: [triggerId], references: [id], onDelete: Cascade)

  subAccountId            String
  subaccount              SubAccount          @relation(fields: [subAccountId], references: [id], onDelete: Cascade)
  action                  Action[]
  automationInstance      AutomationInstance[]

  @@index([triggerId])
  @@index([subAccountId])
}

model AutomationInstance {
  id                      String              @id @default(uuid())
  active                  Boolean             @default(false)
  createdAt               DateTime            @default(now())
  updatedAt               DateTime            @updatedAt

  automationId            String
  automation              Automation          @relation(fields: [automationId], references: [id], onDelete: Cascade)

  @@index([automationId])
}

model Action {
  id                      String              @id @default(uuid())
  name                    String
  order                   Int
  type                    ActionType
  createdAt               DateTime            @default(now())
  updatedAt               DateTime            @updatedAt

  automationId            String
  automation              Automation          @relation(fields: [automationId], references: [id], onDelete: Cascade)
  laneId                  String              @default("0")

  @@index([automationId])
}

model Contact {
  id                      String              @id @default(uuid())
  name                    String
  email                   String
  createdAt               DateTime            @default(now())
  updatedAt               DateTime            @updatedAt
  subAccountId            String

  subaccount              SubAccount          @relation(fields: [subAccountId], references: [id], onDelete: Cascade)
  ticket                  Ticket[]

  @@index([subAccountId])
}

model Media {
  id                      String              @id @default(uuid())
  type                    String?
  name                    String
  link                    String              @unique
  createdAt               DateTime            @default(now())
  updatedAt               DateTime            @updatedAt

  subAccountId            String
  subaccount              SubAccount          @relation(fields: [subAccountId], references: [id], onDelete: Cascade)

  @@index([subAccountId])
}

model Funnel {
  id                      String              @id @default(uuid())
  name                    String
  description             String?
  published               Boolean             @default(false)
  subDomainName           String?             @unique
  favicon                 String?             @db.Text
  updatedAt               DateTime            @updatedAt
  createdAt               DateTime            @default(now())

  subAccountId            String
  subAccount              SubAccount          @relation(fields: [subAccountId], references: [id], onDelete: Cascade)
  funnelPages             FunnelPage[]
  liveProducts            String?             @default("[]")
  className               ClassName[]

  @@index([subAccountId])
}

model ClassName {
  id                      String              @id @default(uuid())
  name                    String
  color                   String
  createdAt               DateTime            @default(now())
  updatedAt               DateTime            @updatedAt
  funnelId                String
  customData              String?             @db.LongText
  funnel                  Funnel              @relation(fields: [funnelId], references: [id], onDelete: Cascade)

  @@index([funnelId])
}

model FunnelPage {
  id                      String              @id @default(uuid())
  name                    String
  pathName                String              @default("")
  visits                  Int                 @default(0)
  content                 String?             @db.LongText
  order                   Int
  previewImage            String?             @db.Text
  createdAt               DateTime            @default(now())
  updatedAt               DateTime            @updatedAt

  funnelId                String
  funnel                  Funnel              @relation(fields: [funnelId], references: [id], onDelete: Cascade)

  @@index([funnelId])
}

model AgencySidebarOption {
  id                      String              @id @default(uuid())
  name                    String              @default("Menu")
  link                    String              @default("#")
  icon                    Icon                @default(info)
  updatedAt               DateTime            @updatedAt
  createdAt               DateTime            @default(now())

  agencyId                String
  agency                  Agency?             @relation(fields: [agencyId], references: [id], onDelete: Cascade)

  @@index([agencyId])
}

model SubAccountSidebarOption {
  id                      String              @id @default(uuid())
  name                    String              @default("Menu")
  link                    String              @default("#")
  icon                    Icon                @default(info)
  createdAt               DateTime            @default(now())
  updatedAt               DateTime            @updatedAt

  subAccount              SubAccount?         @relation(fields: [subAccountId], references: [id], onDelete: Cascade)
  subAccountId            String?

  @@index([subAccountId])
}

model Invitation {
  id                      String              @id @default(uuid())
  email                   String              @unique

  agencyId                String
  agency                  Agency              @relation(fields: [agencyId], references: [id], onDelete: Cascade)
  status                  InvitationStatus    @default(PENDING)
  role                    Role                @default(SUBACCOUNT_USER)

  @@index([agencyId])
}

model Notification {
  id                      String              @id @default(uuid())
  notification            String
  agencyId                String
  subAccountId            String?
  userId                  String
  createdAt               DateTime            @default(now())
  updatedAt               DateTime            @updatedAt

  user                    User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  agency                  Agency              @relation(fields: [agencyId], references: [id], onDelete: Cascade)
  subAccount              SubAccount?         @relation(fields: [subAccountId], references: [id], onDelete: Cascade)


  @@index([agencyId])
  @@index([subAccountId])
  @@index([userId])
}

model Subscription {
  id                      String              @id @default(uuid())
  plan                    Plan?
  price                   String?
  active                  Boolean             @default(false)
  createdAt               DateTime            @default(now())
  updatedAt               DateTime            @updatedAt

  priceId                 String
  customerId              String
  currentPeriodEndDate    DateTime
  subscritiptionId        String              @unique

  agencyId                String?             @unique
  agency                  Agency?             @relation(fields: [agencyId], references: [id])

  @@index([customerId])
}

model AddOns {
  id                      String              @id @default(uuid())
  createdAt               DateTime            @default(now())
  updatedAt               DateTime            @updatedAt
  name                    String
  active                  Boolean             @default(false)
  priceId                 String              @unique
  agencyId                String?
  agency                  Agency?             @relation(fields: [agencyId], references: [id])

  @@index([agencyId])
}